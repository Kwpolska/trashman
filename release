#!/bin/zsh
project="trashman"
aurcat="system"

version=$1
if [[ $version = '' ]]; then
    echo 'Version number?'
    echo -n '> '
    read version
fi

rm -rf trashman.egg-info __pycache__ trashman/__pycache__ trashman/backends/__pycache__ dist build

date=$(date '+%Y-%m-%d')
datel=$(date '+%Y-%m-%d %H:%M%z')

sed "s/version=.*/version='$version',/g" setup.py -i
sed "s/version = .*/version = '$version'/g" docs/conf.py -i
sed "s/release = .*/release = '$version'/g" docs/conf.py -i
sed "s/:Version: .*/:Version: $version/g" docs/*.rst -i
sed "s/BUILDer .* do/BUILDer $version do/g" docs/index.rst -i
sed "s/# Trashman v.*/# Trashman v$version/g" trashman/*.py -i
sed "s/# Trashman v.*/# Trashman v$version/g" trashman/backends/*.py -i
sed "s/__version__ = .*/__version__ = '$version'/" trashman/__init__.py -i
sed "s/pkgver=.*/pkgver=$version/" PKGBUILD -i

sed "s/:Date: .*/:Date: $date/g" docs/*.rst -i

cp docs/README.rst README.rst
cp docs/README.rst README

rm docs/trashman.8.gz | true
rst2man docs/trashman.rst > docs/trashman.8
gzip docs/trashman.8

xgettext -c ./trashman/*.py ./trashman/backends/*.py -o ./messages.pot

sed '1,+17d' ./messages.pot > ./messages.pot.tmp

pot='# Trashman pot file.
# Copyright (C) 2011-2012, Kwpolska.
# This file is distributed under the same license as the Trashman package.
# Kwpolska <kwpolska@kwpolska.tk>, 2011-2012.
#
msgid ""
msgstr ""
"Project-Id-Version: #version\\n"
"Report-Msgid-Bugs-To: Kwpolska <kwpolska@kwpolska.tk>\\n"
"POT-Creation-Date: #datel\\n"
"PO-Revision-Date: #datel\\n"
"Last-Translator: Kwpolska <kwpolska@kwpolska.tk>\\n"
"Language-Team: Kwpolska <kwpolska@kwpolska.tk>\\n"
"Language: en\\n"
"MIME-Version: 1.0\\n"
"Content-Type: text/plain; charset=UTF-8\\n"
"Content-Transfer-Encoding: 8bit\\n"'

echo $pot > messages.pot
cat ./messages.pot.tmp >> messages.pot
rm ./messages.pot.tmp

sed "s/#version/$version/g" messages.pot -i
sed "s/#datel/$datel/g" messages.pot -i

for i in ./locale/*; do
    language=$(basename $i)

    podir="./locale/$language/LC_MESSAGES"
    popath="./locale/$language/LC_MESSAGES/trashman.po"
    sed 's/\"Project-Id-Version: .*/\"Project-Id-Version: '$version'\\n\"/' $popath -i
    msgmerge $popath messages.pot -o $popath
    fuzzy=$(cat $popath | grep '#, fuzzy')
    echo "Please press a key to validate language $language."
    read validatesure
    $EDITOR $popath
    msgfmt -o $podir/trashman.mo $popath
done

python -c 'import trashman'
if [[ $? = 1 ]]; then
    echo "Import failed.  Fix your code or don't come back."
    exit 1
fi

./tests.py
if [[ $? = 1 ]]; then
    echo "Tests failed.  Fix your code or don't come back."
    exit 1
fi
./setup.py sdist upload

md5out=$(md5sum 'dist/'$project'-'$version'.tar.gz'|awk '{print $1}')
sed "s/md5sums=.*/md5sums=('$md5out')/" PKGBUILD -i
rm -rf MKPKGBUILD
mkdir -p MKPKGBUILD/$project
cp PKGBUILD MKPKGBUILD/$project
cd MKPKGBUILD
tar -czvf trashman.src.tar.gz trashman
burp -u Kwpolska -c system trashman.src.tar.gz
cd ..
rm -rf MKPKGBUILD

if [[ $2 != '-c' ]]; then
    echo 'Commit message (sans the version?)'
    echo -n '> '
    read commitmsg
    if [[ commitmsg = '' ]]; then
        cm='t'
    fi
else
    cm='t'
fi

rm -rf trashman.egg-info __pycache__ trashman/__pycache__ trashman/backends/__pycache__ dist build

git add *
if [[ $? != '1' ]]; then
    echo 'Open another terminal and fix the errors.'
    read dn
    git add *
    if [[ $? != '1' ]]; then
        echo 'But please test your changes using that other terminal.'
        read dn2
        git add *
fi

if [[ $cm = 't' ]]; then
    git commit -as
else
    git commit -asm "v$version: $commitmsg"
fi
git tag -a "v$version" -m "Version $version"
git push --tags
git push
